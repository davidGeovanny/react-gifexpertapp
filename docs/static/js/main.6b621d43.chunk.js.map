{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","gif","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAsCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAoBvC,OACI,0BAAMC,SAbW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAES,GACb,MAAM,CAAEP,GAAR,mBAAuBO,OAE3BN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAAP,GACtBF,EAAeE,EAAEQ,OAAOF,YCGjBG,EATK,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAC/B,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNJK,EAAO,uCAAG,WAAQZ,GAAR,uBAAAa,EAAA,6DACbL,EADa,iDACoCM,UAAWd,GAD/C,+DAGAe,MAAOP,GAHP,cAGbQ,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QATvB,kBAaZW,GAbY,4CAAH,sDCoCLK,EAhCC,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EACdR,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAW,WACPhB,EAASZ,GAAW6B,MAAM,SAAAP,GACtBK,EAAS,CACLT,KAAMI,EACNG,SAAS,SAGlB,CAAEzB,IAEE0B,EDJ2BI,CAAc9B,GAAlCsB,EAVgB,EAUtBJ,KAAcO,EAVQ,EAURA,QAEtB,OACI,kBAAC,WAAD,KACI,wBAAIhB,UAAU,qCAAsCT,GAElDyB,GAAW,uBAAGhB,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEPa,EAAOF,KAAK,SAAEW,GAAF,OACR,kBAAC,EAAD,eACIC,IAAMD,EAAMzB,IACPyB,UEWlBE,EAlCM,WAAO,IAAD,EACazC,mBAAS,CAAC,iBADvB,mBAChB0C,EADgB,KACJ3C,EADI,KAYvB,OACI,kBAAC,WAAD,KACI,yCACA,kBAAC,EAAD,CACIA,cAAgBA,IAEpB,6BAEA,4BAEQ2C,EAAWd,KAAK,SAAApB,GAAQ,OACpB,kBAAC,EAAD,CACIA,SAAWA,EACXgC,IAAMhC,UCxBlCmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6b621d43.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 0 ) {\r\n            setCategories( ( category ) => {\r\n                return [inputValue, ...category];\r\n            });\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n \r\nexport default AddCategory;","import React from \"react\";\r\n\r\nconst GifGridItem = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default GifGridItem;","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=daHDIRW4UGVVJrHYWgPIkRbQC9d8xcvo`;\r\n    \r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n};","import React, { Fragment } from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category ).then( images => {\r\n    //         setImages( images );\r\n    //     });\r\n    // }, [ category ]);\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( ( image ) => (\r\n                        <GifGridItem \r\n                            key={ image.id }\r\n                            { ...image }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default GifGrid;","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then( images => {\r\n            setState({\r\n                data: images,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [ category ]);\r\n\r\n    return state;\r\n};","import React, { Fragment, useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Boku No Hero']);\r\n\r\n    // const handleAdd = e => {\r\n    //     const newCategory = 'Rising of Shield Hero';\r\n\r\n    //     setCategories( [...categories, newCategory] );\r\n    //     // setCategories( category => {\r\n    //     //     return [...category, newCategory];\r\n    //     // });\r\n    // };\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpert</h2>\r\n            <AddCategory \r\n                setCategories={ setCategories } \r\n            />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            category={ category }\r\n                            key={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}